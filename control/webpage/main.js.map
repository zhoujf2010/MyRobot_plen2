{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;AAOO,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,cAAc,CAAC;KACxB;;wEAFY,YAAY;0GAAZ,YAAY;QCPzB,yEAAoB;QAClB,yEAAe;QACb,uEAAuB;QACrB,oEAAqE;QACvE,4DAAI;QACN,4DAAM;QAEN,yEAAe;QACb,yEAAuB;QACrB,4EAAiC;QACnC,4DAAM;QAEN,oEACM;QACN,oEACM;QACN,oEACM;QACN,qEACM;QACR,4DAAM;QACR,4DAAM;QAEN,0EAAqB;QACnB,0EAA2B;QAEzB,qEACM;QACR,4DAAM;QACR,4DAAM;;;;;;;;;;;;;;;;;;;;;AC5BoD;AAEX;AACI;AAC6B;;AAczE,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,EAAE,YAHJ;YACP,oEAAa;SACd;mIAIU,SAAS,mBAVlB,wDAAY;QACZ,4DAAY;QACZ,yFAAuB,aAGvB,oEAAa;;;;;;;;;;;;;;;;;ACHV,MAAM,uBAAuB;IAQhC;QAHA,WAAM,GAAG,KAAK,CAAC;QAMX,IAAI,CAAC,IAAI,GAAG,2KAA2K,CAAC;IAC5L,CAAC;IAED,OAAO;QAEH,MAAM,CAAC,IAAI,CACP,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EACpB,gBAAgB,EAChB,mFAAmF,CACtF,CAAC;IACN,CAAC;;AAjBM,+BAAO,GAAG,CAAC,SAAS,CAAC,CAAC;8FAJpB,uBAAuB;qHAAvB,uBAAuB;QCXpC,0EAA2C;QACvC,uEAAuB;QAApB,0IAAS,aAAS,IAAC;QAClB,kEAAuD;QACvD,kEAAoD;QACxD,4DAAI;QACR,4DAAO;;;;;;;;;;;;;;;;;;ACEA,MAAM,YAAY;IAEvB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,SAAS;QAEL,KAAK,CAAC,CAAC,CAAC,CAAC;IACb,CAAC;;wEAVU,YAAY;0GAAZ,YAAY;QCPzB,oEAAG;QAAA,qEAAU;QAAA,4DAAI;QACjB,4EAA8B;QAAtB,oIAAS,eAAW,IAAC;QAAC,4EAAO;QAAA,4DAAS;;;;;;;;;;;;;;;;ACD9C,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/TwitterButton/controller.ts","./src/app/components/TwitterButton/view.html","./src/app/xyz/xyz.component.ts","./src/app/xyz/xyz.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MotionEditor';\n}\n","<div id=\"left_pain\">\n  <div id=\"logo\">\n    <a href=\"/playground/\">\n      <img src=\"./assets/img/logo.png\" width=\"128\" height=\"160\" alt=\"logo\">\n    </a>\n  </div>\n  \n  <div id=\"menu\">\n    <div id=\"social_icons\">\n      <twitter-button></twitter-button>\n    </div>\n\n    <div class=\"button-group\">\n    </div>\n    <div class=\"button-group\">\n    </div>\n    <div class=\"button-group\">\n    </div>\n    <div class=\"button-group\">\n    </div>\n  </div>\n</div>\n\n<div id=\"right_pain\">\n  <div id=\"indent_container\">\n\n    <div id=\"scrollable_container\" scrollable-container auto-resize auto-resize-layout=\"$scrollable_container.layout\" auto-resize-onload=\"true\">\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { XyzComponent } from './xyz/xyz.component';\nimport { TwitterButtonController } from './components/TwitterButton/controller';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    XyzComponent,\n    TwitterButtonController\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport * as angular from \"angular\";\n\n\n\n@Component({\n    selector: 'twitter-button',\n    templateUrl: './view.html',\n    styleUrls: []\n  })\n\nexport class TwitterButtonController\n{\n    href: string;\n\n    static $inject = ['$window'];\n    ttitle = \"aaa\";\n    \n\n    constructor(\n    )\n    {\n        this.href = \"http://twitter.com/share?text=あなた好みにPLENを動かそう！「PLEN - Motion Editor for Web.」は、誰でも簡単にPLENのモーションを作成できるwebアプリです。&url=http://plen.jp/playground/motion-editor/&hashtags=PLEN\";\n    }\n\n    onClick(): void\n    {\n        window.open(\n            encodeURI(this.href),\n            'tweeter_window',\n            'width=650,height=470,menubar=no,toolbar=no,location=no,scrollbars=yes,sizable=yes'\n        );\n    }\n}  ","<span class=\"fa-stack fa-lg button-social\">\n    <a (click)=\"onClick()\">\n        <i class=\"fa fa-circle fa-stack-2x button-twitter\"></i>\n        <i class=\"fa fa-twitter fa-stack-1x fa-inverse\"></i>\n    </a>\n</span>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-xyz',\n  templateUrl: './xyz.component.html',\n  styleUrls: ['./xyz.component.css']\n})\nexport class XyzComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onClickxx(): void\n  {\n      alert(1);\n  }\n}\n","<p>xyz works!</p>\n<button (click)=\"onClickxx()\">aaaxx按钮</button>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}